name: CI
on: [push, workflow_dispatch]
env:
  TEST_SSH_HOST: localhost
  TEST_SSH_USER: support
  TEST_SSH_PASS: support

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            in-windows: 1
          - os: ubuntu-latest
            in-linux: 1
            run-test: 1
          - os: macos-latest
            in-macos: 1
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Setup linux
        if: ${{ matrix.in-linux }}
        run: |
          sudo apt update
          sudo apt install -y openssh-server 
          sudo apt install -y libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-xtest0-dev
          sudo apt install -y libxcb-randr0-dev libxcb-shape0-dev libxcb-render0-dev libxcb-shm0-dev libxcb-image0-dev libxcb-keysyms1-dev libx11-xcb-dev
          sudo apt install -y xvfb x11-xserver-utils x11-xkb-utils
          sudo service ssh --full-restart
          sudo adduser support --gecos "First,Last,RoomNumber,WorkPhone,HomePhone" --disabled-password
          echo support:support | sudo chpasswd

      - name: Setup ssh
        if: ${{ matrix.run-test }}
        run: |
          python3 -m pip install --disable-pip-version-check paramiko
          python3 setupssh.py support@localhost support

      - name: Build Windows
        if: ${{ matrix.in-windows }}
        run: |
          cargo build --bin client

      - name: Build Linux
        if: ${{ matrix.in-linux }}
        run: |
          cargo build --bin server

      - name: Build Mac
        if: ${{ matrix.in-macos }}
        run: |
          cargo build --bin client
